#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#define MAX_POKEMON 30

// Structure to represent a Pokémon
struct Pokemon {
    char name[20];
    char type[10];
    int level;
    int experience;
};

// Function to display Pokémon information
void displayPokemon(struct Pokemon* pokemon) {
    printf("Name: %s\n", pokemon->name);
    printf("Type: %s\n", pokemon->type);
    printf("Level: %d\n", pokemon->level);
    printf("Experience: %d\n", pokemon->experience);
}

// Function to train a Pokémon
void trainPokemon(struct Pokemon* pokemon) {
    int experienceGain = rand() % 10 + 1; // Gain random experience between 1 and 10
    printf("Training %s...\n", pokemon->name);
    printf("Gained %d experience points!\n", experienceGain);

    pokemon->experience += experienceGain;
    if (pokemon->experience >= 100) {
        pokemon->experience -= 100;
        pokemon->level++;
        printf("%s leveled up to level %d!\n", pokemon->name, pokemon->level);

        // Check if the Pokémon evolves at a certain level
        if (pokemon->level == 3) {
            printf("%s is evolving!\n", pokemon->name);
            evolvePokemon(pokemon);
        }
    }
}

// Function to evolve a Pokémon
void evolvePokemon(struct Pokemon* pokemon) {
    strcat(pokemon->name, " (Evolved)");
    strcpy(pokemon->type, "Super ");// Example: Evolved Pokémon type
}

int main() {
    // Seed for random number generation
    srand(time(NULL));

    // Create an array of 30 Pokémon
    struct Pokemon allPokemons[MAX_POKEMON] = {
        {"Pikachu", "Electric", 1, 0},
        {"Charmander", "Fire", 1, 0},
        {"Squirtle", "Water", 1, 0},
        {"Bulbasaur", "Grass", 1, 0},
        {"Jigglypuff", "Normal", 1, 0},
        {"Meowth", "Normal", 1, 0},
        {"Psyduck", "Water", 1, 0},
        {"Growlithe", "Fire", 1, 0},
        {"Geodude", "Rock", 1, 0},
        {"Poliwag", "Water", 1, 0},
        {"Abra", "Psychic", 1, 0},
        {"Machop", "Fighting", 1, 0},
        {"Tentacool", "Water", 1, 0},
        {"Gastly", "Ghost", 1, 0},
        {"Onix", "Rock", 1, 0},
        {"Drowzee", "Psychic", 1, 0},
        {"Krabby", "Water", 1, 0},
        {"Voltorb", "Electric", 1, 0},
        {"Exeggcute", "Grass", 1, 0},
        {"Cubone", "Ground", 1, 0},
        {"Hitmonlee", "Fighting", 1, 0},
        {"Lickitung", "Normal", 1, 0},
        {"Koffing", "Poison", 1, 0},
        {"Rhyhorn", "Ground", 1, 0},
        {"Chansey", "Normal", 1, 0},
        {"Tangela", "Grass", 1, 0},
        {"Kangaskhan", "Normal", 1, 0},
        {"Horsea", "Water", 1, 0},
        {"Goldeen", "Water", 1, 0},
        {"Staryu", "Water", 1, 0},
        {"Mr. Mime", "Psychic", 1, 0},
        {"Scyther", "Bug/Flying", 1, 0},
        {"Jynx", "Ice/Psychic", 1, 0},
        {"Electabuzz", "Electric", 1, 0},
        {"Magmar", "Fire", 1, 0},
        {"Pinsir", "Bug", 1, 0},
    };

    // Main game loop
    int choice, pokemonIndex;
    do {
        printf("\n--- Pokémon Training Game ---\n");
        printf("1. Display Pokémon\n");
        printf("2. Train Pokémon\n");
        printf("3. Quit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Select a Pokémon (1-%d): ", MAX_POKEMON);
                scanf("%d", &pokemonIndex);
                if (pokemonIndex >= 1 && pokemonIndex <= MAX_POKEMON) {
                    displayPokemon(&allPokemons[pokemonIndex - 1]);
                } else {
                    printf("Invalid Pokémon selection.\n");
                }
                break;
            case 2:
                printf("Select a Pokémon to train (1-%d): ", MAX_POKEMON);
                scanf("%d", &pokemonIndex);
                if (pokemonIndex >= 1 && pokemonIndex <= MAX_POKEMON) {
                    trainPokemon(&allPokemons[pokemonIndex - 1]);
                } else {
                    printf("Invalid Pokémon selection.\n");
                }
                break;
            case 3:
                printf("Quitting the game. Goodbye!\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 3);

    return 0;
}
